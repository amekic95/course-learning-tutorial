// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using course_learning_tutorial.Data;

#nullable disable

namespace course_learning_tutorial.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("course_learning_tutorial.Data.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Jane Doe"
                        },
                        new
                        {
                            Id = 2,
                            Name = "John Smith"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Emily Clark"
                        });
                });

            modelBuilder.Entity("course_learning_tutorial.Data.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Name = "C# Fundamentals"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            Name = "ASP.NET Core"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 1,
                            Name = "Entity Framework Core"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 3,
                            Name = "LINQ Deep Dive"
                        });
                });

            modelBuilder.Entity("course_learning_tutorial.Data.Models.CourseStudent", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("integer");

                    b.Property<int>("StudentId")
                        .HasColumnType("integer");

                    b.HasKey("CourseId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("CourseStudents");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            StudentId = 1
                        },
                        new
                        {
                            CourseId = 1,
                            StudentId = 2
                        },
                        new
                        {
                            CourseId = 2,
                            StudentId = 2
                        },
                        new
                        {
                            CourseId = 2,
                            StudentId = 3
                        },
                        new
                        {
                            CourseId = 3,
                            StudentId = 1
                        },
                        new
                        {
                            CourseId = 3,
                            StudentId = 4
                        },
                        new
                        {
                            CourseId = 4,
                            StudentId = 3
                        },
                        new
                        {
                            CourseId = 4,
                            StudentId = 4
                        });
                });

            modelBuilder.Entity("course_learning_tutorial.Data.Models.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Lessons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Title = "Introduction"
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 1,
                            Title = "OOP Concepts"
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 2,
                            Title = "Controllers"
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 3,
                            Title = "DbContext Basics"
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 4,
                            Title = "LINQ Queries"
                        },
                        new
                        {
                            Id = 6,
                            CourseId = 4,
                            Title = "Advanced LINQ"
                        });
                });

            modelBuilder.Entity("course_learning_tutorial.Data.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Alice"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bob"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Charlie"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Diana"
                        });
                });

            modelBuilder.Entity("course_learning_tutorial.Data.Models.Course", b =>
                {
                    b.HasOne("course_learning_tutorial.Data.Models.Author", "Author")
                        .WithMany("Courses")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("course_learning_tutorial.Data.Models.CourseStudent", b =>
                {
                    b.HasOne("course_learning_tutorial.Data.Models.Course", "Course")
                        .WithMany("CourseStudents")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("course_learning_tutorial.Data.Models.Student", "Student")
                        .WithMany("CourseStudents")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("course_learning_tutorial.Data.Models.Lesson", b =>
                {
                    b.HasOne("course_learning_tutorial.Data.Models.Course", "Course")
                        .WithMany("Lessons")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("course_learning_tutorial.Data.Models.Author", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("course_learning_tutorial.Data.Models.Course", b =>
                {
                    b.Navigation("CourseStudents");

                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("course_learning_tutorial.Data.Models.Student", b =>
                {
                    b.Navigation("CourseStudents");
                });
#pragma warning restore 612, 618
        }
    }
}
